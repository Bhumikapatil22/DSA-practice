class Solution {
    public int trap(int[] height) {
        int[] left=new int[height.length];
        int[] right=new int[height.length];
        int lmax=Integer.MIN_VALUE;
        int rmax=Integer.MIN_VALUE;
        int sum=0;
        for(int i=0;i<height.length;i++)
        {
            if(height[i]>lmax)
            {
                lmax=height[i];
                left[i]=lmax;
            }
            left[i]=lmax;
        }
        for(int i=height.length-1;i>=0;i--)
        {
            if(height[i]>rmax)
            {
                rmax=height[i];
                right[i]=rmax;
            }
            right[i]=rmax;
        }
        for(int i=0;i<height.length;i++)
        {
            int sub=Math.min(left[i],right[i])-height[i];
            if(sub<0)
            {
                sub=0;
            }
            sum=sum+sub;
        }
    return sum;
    }
}